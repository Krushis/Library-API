{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lukas\\\\OneDrive - Kaunas University of Technology\\\\Desktop\\\\Programming\\\\LibraryAPI\\\\library-frontend\\\\src\\\\Components\\\\UserBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReservationForm from './ReservationForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserBooks = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch reservations from the API\n  const fetchReservations = async () => {\n    setLoading(true); // Start loading state\n    setError(null); // Reset any previous errors\n\n    try {\n      const response = await axios.get('http://localhost:5207/api/reservations');\n\n      // Check if the response data is empty\n      if (response.data && response.data.length > 0) {\n        setReservations(response.data); // Set reservations if data is available\n      } else {\n        setReservations([]); // Clear reservations if no data\n        setError('No reservations found.'); // Set error message\n      }\n    } catch (err) {\n      setError('Failed to fetch reservations. Please try again later.'); // Handle error\n      console.error(\"Error fetching reservations:\", err);\n    } finally {\n      setLoading(false); // End loading state\n    }\n  };\n\n  // Fetch reservations when the component mounts\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n\n  // Function to handle successful reservation\n  const handleReservationSuccess = () => {\n    fetchReservations(); // Re-fetch reservations after a successful reservation\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this); // Loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this); // Error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"My Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReservationForm, {\n      book: {\n        id: 1,\n        name: \"Sample Book\"\n      },\n      onReservationSuccess: handleReservationSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), reservations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reservations found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) // Message when no reservations exist\n    : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border-collapse border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-200 p-2\",\n            children: \"Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-200 p-2\",\n            children: \"Reservation Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-200 p-2\",\n            children: \"Total Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservations.map(reservation => {\n          var _reservation$book;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-200 p-2\",\n              children: ((_reservation$book = reservation.book) === null || _reservation$book === void 0 ? void 0 : _reservation$book.name) || \"Unknown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-200 p-2\",\n              children: new Date(reservation.reservationDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-200 p-2\",\n              children: [\"\\u20AC\", reservation.totalCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, reservation.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(UserBooks, \"4HHkFK9C2ert1TA/bY2e0izp6fA=\");\n_c = UserBooks;\nexport default UserBooks;\nvar _c;\n$RefreshReg$(_c, \"UserBooks\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReservationForm","jsxDEV","_jsxDEV","UserBooks","_s","reservations","setReservations","loading","setLoading","error","setError","fetchReservations","response","get","data","length","err","console","handleReservationSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","book","id","name","onReservationSuccess","map","reservation","_reservation$book","Date","reservationDate","toLocaleDateString","totalCost","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Lukas/OneDrive - Kaunas University of Technology/Desktop/Programming/LibraryAPI/library-frontend/src/Components/UserBooks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReservationForm from './ReservationForm'; \r\n\r\nconst UserBooks = () => {\r\n    const [reservations, setReservations] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch reservations from the API\r\n    const fetchReservations = async () => {\r\n        setLoading(true); // Start loading state\r\n        setError(null); // Reset any previous errors\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:5207/api/reservations');\r\n\r\n            // Check if the response data is empty\r\n            if (response.data && response.data.length > 0) {\r\n                setReservations(response.data); // Set reservations if data is available\r\n            } else {\r\n                setReservations([]); // Clear reservations if no data\r\n                setError('No reservations found.'); // Set error message\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to fetch reservations. Please try again later.'); // Handle error\r\n            console.error(\"Error fetching reservations:\", err);\r\n        } finally {\r\n            setLoading(false); // End loading state\r\n        }\r\n    };\r\n\r\n    // Fetch reservations when the component mounts\r\n    useEffect(() => {\r\n        fetchReservations();\r\n    }, []);\r\n\r\n    // Function to handle successful reservation\r\n    const handleReservationSuccess = () => {\r\n        fetchReservations(); // Re-fetch reservations after a successful reservation\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"p-4\">Loading...</div>; // Loading message\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"p-4 text-red-600\">{error}</div>; // Error message\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">My Reservations</h1>\r\n            <ReservationForm book={{ id: 1, name: \"Sample Book\" }} onReservationSuccess={handleReservationSuccess} />\r\n            {reservations.length === 0 ? (\r\n                <p>No reservations found.</p> // Message when no reservations exist\r\n            ) : (\r\n                <table className=\"min-w-full border-collapse border border-gray-200\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"border border-gray-200 p-2\">Book</th>\r\n                            <th className=\"border border-gray-200 p-2\">Reservation Date</th>\r\n                            <th className=\"border border-gray-200 p-2\">Total Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {reservations.map((reservation) => (\r\n                            <tr key={reservation.id}>\r\n                                <td className=\"border border-gray-200 p-2\">{reservation.book?.name || \"Unknown\"}</td>\r\n                                <td className=\"border border-gray-200 p-2\">{new Date(reservation.reservationDate).toLocaleDateString()}</td>\r\n                                <td className=\"border border-gray-200 p-2\">€{reservation.totalCost.toFixed(2)}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBooks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}